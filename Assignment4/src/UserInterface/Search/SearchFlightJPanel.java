/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Search;

import Business.AirlinerDirectory;
import Business.Airplane;
import Business.MasterSchedule;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Siyuan Zhang
 */
public class SearchFlightJPanel extends javax.swing.JPanel {
    
    private final JPanel userProcessContainer;
    private ArrayList<Airplane> searchResult;
    private MasterSchedule masterSchedule;
    //private ArrayList<Airplane> masterSchedule;
    
    
    /**
     * Creates new form SearchJPanel
     */
    public SearchFlightJPanel(JPanel userProcessContainer, AirlinerDirectory airlinerDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        
        this.masterSchedule = new MasterSchedule();
        this.masterSchedule.addAirplanesFromAirlinerDirectory(airlinerDirectory.getAirlinerDirectory());
        //this.masterSchedule = masterSchedule.getMasterSchedule();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroup = new javax.swing.ButtonGroup();
        flightNumLabel = new javax.swing.JLabel();
        departureLocationLabel = new javax.swing.JLabel();
        txtFlightNum = new javax.swing.JTextField();
        txtDepartureLocation = new javax.swing.JTextField();
        txtArrivalLocation = new javax.swing.JTextField();
        ArrivalLocationLabel = new javax.swing.JLabel();
        preferredTimeLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        radioBtnDayTime = new javax.swing.JRadioButton();
        radioBtnMorning = new javax.swing.JRadioButton();
        txtDate = new javax.swing.JTextField();
        radioBtnEvening = new javax.swing.JRadioButton();
        titleLabel = new javax.swing.JLabel();
        btnSearchByOtherConditions = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        flightNumLabel.setText("Flight number");

        departureLocationLabel.setText("Departure location");

        txtDepartureLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDepartureLocationActionPerformed(evt);
            }
        });

        ArrivalLocationLabel.setText("Arrival locaiton");

        preferredTimeLabel.setText("Preferred time of day");

        dateLabel.setText("Date");

        btnGroup.add(radioBtnDayTime);
        radioBtnDayTime.setText("Day time");

        btnGroup.add(radioBtnMorning);
        radioBtnMorning.setText("Morning");

        btnGroup.add(radioBtnEvening);
        radioBtnEvening.setText("Evening");

        titleLabel.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        titleLabel.setText("Search");

        btnSearchByOtherConditions.setText("Search");
        btnSearchByOtherConditions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchByOtherConditionsActionPerformed(evt);
            }
        });

        btnBack.setText("<-Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel3.setText("(MM/dd/yyyy)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(183, 183, 183)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(flightNumLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(preferredTimeLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ArrivalLocationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(departureLocationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(135, 135, 135)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDepartureLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtArrivalLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(radioBtnMorning)
                                        .addGap(18, 18, 18)
                                        .addComponent(radioBtnDayTime)
                                        .addGap(18, 18, 18)
                                        .addComponent(radioBtnEvening))
                                    .addComponent(txtFlightNum, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(178, 178, 178))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(248, 248, 248)
                        .addComponent(titleLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(659, 659, 659)
                        .addComponent(btnSearchByOtherConditions, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(titleLabel))
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 175, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(flightNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFlightNum, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDepartureLocation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(departureLocationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ArrivalLocationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArrivalLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(preferredTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radioBtnMorning)
                    .addComponent(radioBtnDayTime)
                    .addComponent(radioBtnEvening))
                .addGap(18, 18, 18)
                .addComponent(btnSearchByOtherConditions, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(108, 108, 108))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtDepartureLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDepartureLocationActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtDepartureLocationActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSearchByOtherConditionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchByOtherConditionsActionPerformed
        //Get input from user interface
        String flightNum = txtFlightNum.getText();
        String departureLocation = txtDepartureLocation.getText();
        String arrivalLocation = txtArrivalLocation.getText();
        String dateString = txtDate.getText();
        String preferredTime = "";
        if(radioBtnDayTime.isSelected())
            preferredTime = "Day time";
        else if(radioBtnMorning.isSelected())
            preferredTime = "Morning";
        else if(radioBtnEvening.isSelected() )
            preferredTime = "Evening";
        
        //If all conditions are empty, hint the user and quit searching         
        if((flightNum == null || flightNum.equals("")) &&
                (departureLocation == null || departureLocation.equals("")) &&
                (arrivalLocation == null || arrivalLocation.equals("")) &&
                (preferredTime == null || preferredTime.equals("")) &&
                (dateString == null || dateString.equals(""))){
            
            JOptionPane.showMessageDialog(null, "You must enter at least one condition!");
            return;
        }

        
        //Search airplane based on conditions
        this.searchResult = masterSchedule.getMasterSchedule();
        
        if(flightNum != null && !flightNum.equals("")){
            this.searchResult = masterSchedule.searchAirplaneByFlightNum(this.searchResult, flightNum);
            if(searchResult.isEmpty()){
                JOptionPane.showMessageDialog(null, "The required departure location is not exist in all flights!");
                return;
            }
        }
        
        if(departureLocation != null && !departureLocation.equals("")){
            this.searchResult = masterSchedule.searchAirplaneByDepartureLocation(this.searchResult, departureLocation);
            if(searchResult.isEmpty()){
                JOptionPane.showMessageDialog(null, "The required departure location is not exist in all flights!");
                return;
            }
        }
        
        if(arrivalLocation != null && !arrivalLocation.equals("")){
            this.searchResult = masterSchedule.searchAirplaneByArrivalLocation(this.searchResult, arrivalLocation);
            if(searchResult.isEmpty()){
                JOptionPane.showMessageDialog(null, "The required arrival location is not exist in all flights!");
                return;
            }
        }
        
        if(dateString != null && !dateString.equals("")){
            //Check the foramt of date if date is one of the conditions
            SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy");
            try{
                Date date= sdf.parse(dateString);
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "You must enter date as format of MM/dd/yyyy");
                return;
            }
            
            this.searchResult = masterSchedule.searchAirplaneByDate(this.searchResult, dateString);
            if(searchResult.isEmpty()){
                JOptionPane.showMessageDialog(null, "The required departure locations is not exist in all flights!");
                return;
            }
        }
        
        if(preferredTime != null && !preferredTime.equals("")){
            this.searchResult = masterSchedule.searchAirplaneByPreferredTime(this.searchResult, preferredTime);
            if(searchResult.isEmpty()){
                JOptionPane.showMessageDialog(null, "The required preferred time is not exist in all flights!");
                return;
            }
        }
        
        //Transfer the result to search result panel
        FlightsFoundJPanel panel = new FlightsFoundJPanel(userProcessContainer, this.searchResult);
        userProcessContainer.add("FlightsFoundJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnSearchByOtherConditionsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ArrivalLocationLabel;
    private javax.swing.JButton btnBack;
    private javax.swing.ButtonGroup btnGroup;
    private javax.swing.JButton btnSearchByOtherConditions;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JLabel departureLocationLabel;
    private javax.swing.JLabel flightNumLabel;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel preferredTimeLabel;
    private javax.swing.JRadioButton radioBtnDayTime;
    private javax.swing.JRadioButton radioBtnEvening;
    private javax.swing.JRadioButton radioBtnMorning;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField txtArrivalLocation;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDepartureLocation;
    private javax.swing.JTextField txtFlightNum;
    // End of variables declaration//GEN-END:variables
}
